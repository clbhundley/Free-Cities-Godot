[gd_scene load_steps=33 format=2]

[ext_resource path="res://Slaves/Slave Display.tscn" type="PackedScene" id=1]
[ext_resource path="res://Slaves/slave.gd" type="Script" id=2]
[ext_resource path="res://Slaves/Model.tscn" type="PackedScene" id=3]
[ext_resource path="res://Slaves/stats.gd" type="Script" id=4]
[ext_resource path="res://Slaves/Actions/travel.gd" type="Script" id=74]

[sub_resource type="GDScript" id=1]
script/source = "extends Node

onready var _slave = owner

func begin():
	_slave.get_node('Display/Top/Status').set_text(\"Resting\")

func next_action():
	if _slave.queued_action:
		_slave.action = _slave.queued_action
		_slave.queued_action = null
	if _slave.bathroom > 50:
		if _slave.location == _slave.quarters:
			_slave.action = \"Bathroom\"
		else:
			_slave.destination = _slave.quarters
			_slave.action = \"Travel\"
			_slave.queued_action = \"Bathroom\"
	elif _slave.hunger > 40:
		var nutrition_system = ArcUtils.get_nutrition_system()
		if _slave.location == nutrition_system:
			_slave.action = \"Eating\"
		else:
			_slave.destination = nutrition_system
			_slave.action = \"Travel\"
			_slave.queued_action = \"Eating\"
	elif _slave.fatigue > 70:
		if _slave.location == _slave.quarters:
			_slave.action = \"Sleeping\"
		else:
			_slave.destination = _slave.quarters
			_slave.action = \"Travel\"
			_slave.queued_action = \"Sleeping\"
	elif _slave.arousal > 50:
		_slave.action = \"Masturbation\"
	else:
		_slave.action = \"Idle\"
"

[sub_resource type="GDScript" id=2]
script/source = "extends Node

onready var _slave = owner

func begin():
	_slave.get_node('Display/Top/Status').set_text(\"Prostitute\")

func next_action():
	if _slave.queued_action:
		_slave.action = _slave.queued_action
		_slave.queued_action = null
	elif _slave.bathroom > 60:
		if _slave.location == _slave.quarters:
			_slave.action = \"Bathroom\"
		else:
			_slave.destination = _slave.quarters
			_slave.action = \"Travel\"
			_slave.queued_action = \"Bathroom\"
	elif _slave.hunger > 50:
		var nutrition_system = ArcUtils.get_nutrition_system()
		if _slave.location == nutrition_system:
			_slave.action = \"Eating\"
		else:
			_slave.destination = nutrition_system
			_slave.action = \"Travel\"
			_slave.queued_action = \"Eating\"
	elif _slave.fatigue > 70:
		if _slave.location == _slave.quarters:
			_slave.action = \"Sleeping\"
		else:
			_slave.destination = _slave.quarters
			_slave.action = \"Travel\"
			_slave.queued_action = \"Sleeping\"
	elif _slave.arousal > 90:
		_slave.action = \"Masturbation\"
	else:
		_slave.action = \"Awaiting customer\"
		_slave.queued_action = \"Servicing customer\"
"

[sub_resource type="GDScript" id=3]
script/source = "extends Node

onready var _slave = owner

func tick():
	pass
"

[sub_resource type="GDScript" id=4]
script/source = "extends Node

onready var _slave = owner

var current_time = 0
var total_time

func display_action():
	owner.get_node('Display/Activity/Action').set_text(\"Idle\")

func tick():
	if current_time == 0:
		begin()
	elif current_time < total_time:
		step()
	else:
		end()

func begin():
	total_time = abs(math.gaussian(100,10))
	_slave.get_node('Display/Activity/ProgressBar').max_value = total_time
	display_action()
	step()

func step():
	current_time += 1
	_slave.get_node('Display/Activity/ProgressBar').set(\"value\",current_time)
	_slave.get_node('Display/Activity/Time').set_text(math.time_remaining(current_time,total_time))

func end():
	current_time = 0
	_slave.get_node('Scripts/Assignments/'+_slave.assignment).next_action()
	_slave.get_node('Display/Activity/Time').set_text(\"Done\")
	_slave.get_node('Display/Activity/Action').set_text(\"\")
"

[sub_resource type="GDScript" id=5]
script/source = "extends Node

onready var _slave = owner

var current_time = 0
var total_time

func display_action():
	_slave.get_node('Display/Activity/Action').set_text(\"Sleeping\")

func tick():
	if current_time == 0:
		begin()
	elif current_time < total_time:
		step()
	else:
		end()

func begin():
	_slave.is_awake = false
	var fatigue = round(_slave.fatigue/10)
	if fatigue == 0:
		fatigue = 1
	total_time = abs(math.gaussian(3600,200))*fatigue
	_slave.get_node('Display/Activity/ProgressBar').max_value = total_time
	display_action()
	step()

func step():
	current_time += 1
	if _slave.fatigue > 0:
		_slave.fatigue -= 0.0028
	_slave.get_node('Display/Activity/ProgressBar').set(\"value\",current_time)
	_slave.get_node('Display/Activity/Time').set_text(math.time_remaining(current_time,total_time))
		
#		if s.health <= 0: #Deceased
#			pass
#		elif s.health < 10: #Near death
#			s.happiness += 0.001
#		elif s.health < 20: #Extremely unhealthy
#			s.happiness += 0.002
#		elif s.health < 30: #Very unhealthy
#			s.happiness += 0.003
#		elif s.health < 40: #Unhealthy
#			s.happiness += 0.004
#		elif s.health < 50: #Somewhat unhealthy
#			s.happiness += 0.005
#		elif s.health < 60: #Healthy
#			s.happiness += 0.001
#		elif s.health < 80: #Very healthy
#			s.happiness += 0.006
#		elif s.health < 100: #Extremely healthy
#			s.happiness += 0.007
#		elif s.health < 110: #Perfectly healthy
#			s.happiness += 0.008
#		elif s.health >= 110: #Unnaturally healthy
#			s.happiness += 0.009
#		if s.fatigue < 10: #Exhausted
#			s.fatigue += 0.005
#		if s.fatigue < 20: #Very tired
#			s.fatigue += 0.004
#		if s.fatigue < 30: #Tired
#			s.fatigue += 0.003
#		if s.fatigue < 40: #Drowsy
#			s.fatigue += 0.002
#		if s.fatigue < 50: #Awake
#			s.fatigue += 0.001
#		if s.fatigue < 60: #Fresh
#			s.fatigue += 0.0005
#		if s.fatigue < 80: #Energetic
#			s.fatigue += 0.0003
#		if s.fatigue < 100: #Very energetic
#			s.fatigue += 0.0001

func end():
	current_time = 0
	_slave.is_awake = true
	_slave.get_node('Scripts/Assignments/'+_slave.assignment).next_action()
	_slave.get_node('Display/Activity/Time').set_text(\"Done\")
	_slave.get_node('Display/Activity/Action').set_text(\"\")
"

[sub_resource type="GDScript" id=6]
script/source = "extends Node

onready var _slave = owner

var current_time = 0
var total_time

func display_action():
	_slave.get_node('Display/Activity/Action').set_text(\"Eating Meal\")

func start():
	var hunger = round(_slave.hunger/10)
	if hunger == 0:
		hunger = 1
	total_time = abs(math.gaussian(55,11))*hunger
	_slave.get_node('Display/Activity/ProgressBar').max_value = total_time
	display_action()
	step()

func step():
	current_time += 1
	if _slave.hunger > 0:
		_slave.hunger -= 0.2
	_slave.get_node('Display/Activity/ProgressBar').set(\"value\",current_time)
	_slave.get_node('Display/Activity/Time').set_text(math.time_remaining(current_time,total_time))

func tick():
	if current_time == 0:
		game.update_money(-5)
		start()
	elif current_time < total_time:
		step()
	else:
		current_time = 0
		_slave._action_ended()
"

[sub_resource type="GDScript" id=7]
script/source = "extends Node

onready var _slave = owner

var current_time = 0
var total_time

func display_action():
	_slave.get_node('Display/Activity/Action').set_text(\"Using bathroom\")

func start():
	var bathroom = round(_slave.bathroom/10)
	if bathroom == 0:
		bathroom = 1
	total_time = abs(math.gaussian(45,8))*bathroom
	_slave.get_node('Display/Activity/ProgressBar').max_value = total_time
	display_action()
	step()

func step():
	current_time += 1
	if _slave.bathroom > 0:
		_slave.bathroom -= 0.3
	_slave.get_node('Display/Activity/ProgressBar').set(\"value\",current_time)
	_slave.get_node('Display/Activity/Time').set_text(math.time_remaining(current_time,total_time))

func tick():
	if current_time == 0:
		start()
	elif current_time < total_time:
		step()
	else:
		current_time = 0
		_slave._action_ended()
"

[sub_resource type="GDScript" id=8]
script/source = "extends Node

onready var _slave = owner

var current_time = 0
var total_time

func display_action():
	_slave.get_node('Display/Activity/Action').set_text(\"Masturbating\")

func start():
	var arousal = round(_slave.arousal/10)
	if arousal == 0:
		arousal = 1
	total_time = abs(math.gaussian(230,21))*arousal
	_slave.get_node('Display/Activity/ProgressBar').max_value = total_time
	display_action()
	step()

func step():
	current_time += 1
	if _slave.arousal > 0:
		_slave.arousal -= 0.1
	_slave.get_node('Display/Activity/ProgressBar').set(\"value\",current_time)
	_slave.get_node('Display/Activity/Time').set_text(math.time_remaining(current_time,total_time))

func tick():
	if current_time == 0:
		start()
	elif current_time < total_time:
		step()
	else:
		current_time = 0
		_slave._action_ended()
"

[sub_resource type="GDScript" id=9]
script/source = "extends Node

onready var _slave = owner

var current_time = 0
var total_time

func display_action():
	_slave.get_node('Display/Activity/Action').set_text(\"Waiting for Customer\")

func start():
	#time to acquire customer based on...?
	var arousal = round(_slave.arousal/10)
	if arousal == 0:
		arousal = 1
	total_time = abs(math.gaussian(230,21))*arousal
	_slave.get_node('Display/Activity/ProgressBar').max_value = total_time
	display_action()
	step()

func step():
	current_time += 1
	if _slave.arousal <= 90:  #anticipation
		_slave.arousal += 0.1
	_slave.get_node('Display/Activity/ProgressBar').set(\"value\",current_time)
	_slave.get_node('Display/Activity/Time').set_text(math.time_remaining(current_time,total_time))

func tick():
	if current_time == 0:
		start()
	elif current_time < total_time:
		step()
	else:
		current_time = 0
		_slave.destination = random_sector_test()
		_slave.action = \"Travel\"

func random_sector_test():
	var terras = [\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\"]
	var arc_size = get_tree().get_root().get_node(\"Game/Arcology\").size
	var terra = terras[dice.roll(arc_size-2)]
	var sector = dice.roll(12)+1
	if terra == \"A\" or terra == \"B\":
		if dice.roll(2) == 1:
			sector += 12
	return terra+str(sector)
"

[sub_resource type="GDScript" id=10]
script/source = "extends Node

onready var _slave = owner

var current_time = 0
var total_time

func display_action():
	_slave.get_node('Display/Activity/Action').set_text(\"Servicing Customer\")

func start():
	#time to satisfy customer based on slave arousal?
	var arousal = round(_slave.arousal/10)
	if arousal == 0:
		arousal = 1
	total_time = abs(math.gaussian(230,21))*arousal
	_slave.get_node('Display/Activity/ProgressBar').max_value = total_time
	display_action()
	step()

func step():
	current_time += 1
	if _slave.arousal > 0:    #satisfaction
		_slave.arousal -= 0.1
	_slave.get_node('Display/Activity/ProgressBar').set(\"value\",current_time)
	_slave.get_node('Display/Activity/Time').set_text(math.time_remaining(current_time,total_time))

func tick():
	if current_time == 0:
		start()
	elif current_time < total_time:
		step()
	else:
		current_time = 0
		game.update_money(abs(math.gaussian(50,20)))
		_slave._action_ended()
"

[sub_resource type="GDScript" id=11]
script/source = "extends Node

onready var _slave = owner

var active = true

func tick():
	pass
#	if s.health < 200:
#		s.health += 1
	
#	if s.is_awake:
#		if s.health <= 0: #Deceased
#			pass
#
#		elif s.health < 10: #Near death
#			s.happiness -= 0.005
#			if s.fatigue > 10:
#				s.fatigue -= 0.005
#
#		elif s.health < 20: #Extremely unhealthy
#			s.happiness -= 0.004
#			if s.fatigue > 20:
#				s.fatigue -= 0.004
#
#		elif s.health < 30: #Very unhealthy
#			s.happiness -= 0.003
#			if s.fatigue > 30:
#				s.fatigue -= 0.003
#
#		elif s.health < 40: #Unhealthy
#			s.happiness -= 0.002
#			if s.fatigue > 40:
#				s.fatigue -= 0.002
#
#		elif s.health < 50: #Somewhat unhealthy
#			s.happiness -= 0.001
#			if s.fatigue > 50:
#				s.fatigue -= 0.001
#
#		elif s.health < 60: #Healthy
#			s.happiness += 0.001
#
#		elif s.health < 80: #Very healthy
#			s.happiness += 0.002
##			if s.fatigue < 50:
##				s.fatigue += 0.001
#
#		elif s.health < 100: #Extremely healthy
#			s.happiness += 0.003
##			if s.fatigue < 60:
##				s.fatigue += 0.003
#
#		elif s.health < 110: #Perfectly healthy
#			s.happiness += 0.004
##			if s.fatigue < 80:
##				s.fatigue += 0.004
#
#		elif s.health >= 110: #Unnaturally healthy
#			s.happiness += 0.005
##			if s.fatigue < 100:
##				s.fatigue += 0.005
"

[sub_resource type="GDScript" id=12]
script/source = "extends Node

onready var _slave = owner

var active = true

func tick():
	if _slave.is_awake:
		if _slave.fatigue < 80:
			_slave.fatigue += 0.0014
		elif _slave.fatigue < 100:
			_slave.fatigue += 0.0007
"

[sub_resource type="GDScript" id=13]
script/source = "extends Node

onready var _slave = owner

var active = true

func tick():
	if _slave.hunger < 100:
		if _slave.is_awake:
			_slave.hunger += 0.0018
		else:
			_slave.hunger += 0.0014
"

[sub_resource type="GDScript" id=14]
script/source = "extends Node

onready var _slave = owner

var active = true

func tick():
	if _slave.bathroom < 100:
		if _slave.is_awake:
			_slave.bathroom += 0.0036
		else:
			_slave.bathroom += 0.0026
"

[sub_resource type="GDScript" id=15]
script/source = "extends Node

onready var _slave = owner

var active = true

func tick():
	if _slave.arousal < 100:
		if _slave.libido < 25:
			_slave.arousal += 0.0004
		elif _slave.libido < 50:
			_slave.arousal += 0.0005
		elif _slave.libido < 75:
			_slave.arousal += 0.0006
		elif _slave.libido < 125:
			_slave.arousal += 0.0007
		elif _slave.libido < 150:
			_slave.arousal += 0.0008
		elif _slave.libido < 175:
			_slave.arousal += 0.0009
		elif _slave.libido >= 175:
			_slave.arousal += 0.001
"

[sub_resource type="GDScript" id=16]
script/source = "extends Node

var active

func _ready():
	# Called when the node is added to the scene for the first time.
	# Initialization here
	pass

#func _process(delta):
#	# Called every frame. Delta is time since last frame.
#	# Update game logic here.
#	pass
"

[sub_resource type="GDScript" id=17]
script/source = "extends Node

var active

func _ready():
	# Called when the node is added to the scene for the first time.
	# Initialization here
	pass

#func _process(delta):
#	# Called every frame. Delta is time since last frame.
#	# Update game logic here.
#	pass
"

[sub_resource type="GDScript" id=18]
script/source = "extends Node

var active

func _ready():
	# Called when the node is added to the scene for the first time.
	# Initialization here
	pass

#func _process(delta):
#	# Called every frame. Delta is time since last frame.
#	# Update game logic here.
#	pass
"

[sub_resource type="GDScript" id=19]
script/source = "extends Node

var active

func _ready():
	# Called when the node is added to the scene for the first time.
	# Initialization here
	pass

#func _process(delta):
#	# Called every frame. Delta is time since last frame.
#	# Update game logic here.
#	pass
"

[sub_resource type="GDScript" id=20]
script/source = "extends Node

var active

func _ready():
	# Called when the node is added to the scene for the first time.
	# Initialization here
	pass

#func _process(delta):
#	# Called every frame. Delta is time since last frame.
#	# Update game logic here.
#	pass
"

[sub_resource type="GDScript" id=21]
script/source = "extends Node

var active

func _ready():
	# Called when the node is added to the scene for the first time.
	# Initialization here
	pass

#func _process(delta):
#	# Called every frame. Delta is time since last frame.
#	# Update game logic here.
#	pass
"

[sub_resource type="GDScript" id=22]
script/source = "extends Node

var active

func _ready():
	# Called when the node is added to the scene for the first time.
	# Initialization here
	pass

#func _process(delta):
#	# Called every frame. Delta is time since last frame.
#	# Update game logic here.
#	pass
"

[sub_resource type="GDScript" id=23]
script/source = "extends Node

var active

func _ready():
	# Called when the node is added to the scene for the first time.
	# Initialization here
	pass

#func _process(delta):
#	# Called every frame. Delta is time since last frame.
#	# Update game logic here.
#	pass
"

[sub_resource type="GDScript" id=24]
script/source = "extends Node

var active

func _ready():
	# Called when the node is added to the scene for the first time.
	# Initialization here
	pass

#func _process(delta):
#	# Called every frame. Delta is time since last frame.
#	# Update game logic here.
#	pass
"

[sub_resource type="GDScript" id=25]
script/source = "extends Node

var active

func _ready():
	# Called when the node is added to the scene for the first time.
	# Initialization here
	pass

#func _process(delta):
#	# Called every frame. Delta is time since last frame.
#	# Update game logic here.
#	pass
"

[sub_resource type="GDScript" id=26]
script/source = "extends Node

var active

func _ready():
	# Called when the node is added to the scene for the first time.
	# Initialization here
	pass

#func _process(delta):
#	# Called every frame. Delta is time since last frame.
#	# Update game logic here.
#	pass
"

[sub_resource type="GDScript" id=27]
script/source = "extends Node

var active

func _ready():
	# Called when the node is added to the scene for the first time.
	# Initialization here
	pass

#func _process(delta):
#	# Called every frame. Delta is time since last frame.
#	# Update game logic here.
#	pass
"

[node name="Slave" type="Spatial"]
script = ExtResource( 2 )

[node name="Display" parent="." instance=ExtResource( 1 )]

[node name="Model" parent="." instance=ExtResource( 3 )]

[node name="Scripts" type="Node" parent="."]

[node name="Stats" type="Node" parent="Scripts"]
script = ExtResource( 4 )

[node name="Manager" type="Node" parent="Scripts"]

[node name="Assignments" type="Node" parent="Scripts"]

[node name="Resting" type="Node" parent="Scripts/Assignments"]
script = SubResource( 1 )

[node name="Prostitute" type="Node" parent="Scripts/Assignments"]
script = SubResource( 2 )

[node name="Confinement" type="Node" parent="Scripts/Assignments"]

[node name="Classes" type="Node" parent="Scripts/Assignments"]

[node name="House Servant" type="Node" parent="Scripts/Assignments"]

[node name="Pet" type="Node" parent="Scripts/Assignments"]

[node name="Escort" type="Node" parent="Scripts/Assignments"]

[node name="Public Servant" type="Node" parent="Scripts/Assignments"]

[node name="Subordinate Assistant" type="Node" parent="Scripts/Assignments"]

[node name="Subordinate Slave" type="Node" parent="Scripts/Assignments"]

[node name="Glory Hole" type="Node" parent="Scripts/Assignments"]

[node name="Sex Arcade" type="Node" parent="Scripts/Assignments"]

[node name="Club Entertainer" type="Node" parent="Scripts/Assignments"]

[node name="Office Toy" type="Node" parent="Scripts/Assignments"]

[node name="Office Ornament" type="Node" parent="Scripts/Assignments"]

[node name="Arcology Toy" type="Node" parent="Scripts/Assignments"]

[node name="Arcology Ornament" type="Node" parent="Scripts/Assignments"]

[node name="Fluid Extraction" type="Node" parent="Scripts/Assignments"]

[node name="Actions" type="Node" parent="Scripts"]

[node name="None" type="Node" parent="Scripts/Actions"]
script = SubResource( 3 )

[node name="Idle" type="Node" parent="Scripts/Actions"]
script = SubResource( 4 )

[node name="Travel" type="Node" parent="Scripts/Actions"]
script = ExtResource( 74 )

[node name="Sleeping" type="Node" parent="Scripts/Actions"]
script = SubResource( 5 )

[node name="Eating" type="Node" parent="Scripts/Actions"]
script = SubResource( 6 )

[node name="Bathroom" type="Node" parent="Scripts/Actions"]
script = SubResource( 7 )

[node name="Bathing" type="Node" parent="Scripts/Actions"]

[node name="Masturbation" type="Node" parent="Scripts/Actions"]
script = SubResource( 8 )

[node name="Awaiting customer" type="Node" parent="Scripts/Actions"]
script = SubResource( 9 )

[node name="Servicing customer" type="Node" parent="Scripts/Actions"]
script = SubResource( 10 )

[node name="Rules" type="Node" parent="Scripts"]

[node name="preset rules 1" type="Node" parent="Scripts/Rules"]

[node name="preset rules 2" type="Node" parent="Scripts/Rules"]

[node name="preset rules 3" type="Node" parent="Scripts/Rules"]

[node name="preset rules 4" type="Node" parent="Scripts/Rules"]

[node name="Effects" type="Node" parent="Scripts"]

[node name="Health" type="Node" parent="Scripts/Effects"]
script = SubResource( 11 )

[node name="Fatigue" type="Node" parent="Scripts/Effects"]
script = SubResource( 12 )

[node name="Hunger" type="Node" parent="Scripts/Effects"]
script = SubResource( 13 )

[node name="Bathroom" type="Node" parent="Scripts/Effects"]
script = SubResource( 14 )

[node name="Arousal" type="Node" parent="Scripts/Effects"]
script = SubResource( 15 )

[node name="Drugs" type="Node" parent="Scripts/Effects"]
script = SubResource( 16 )

[node name="Curatives" type="Node" parent="Scripts/Effects"]
script = SubResource( 17 )

[node name="Preventatives" type="Node" parent="Scripts/Effects"]
script = SubResource( 18 )

[node name="Aphrodisiacs" type="Node" parent="Scripts/Effects"]
script = SubResource( 19 )

[node name="Hormones" type="Node" parent="Scripts/Effects"]
script = SubResource( 20 )

[node name="Diet" type="Node" parent="Scripts/Effects"]
script = SubResource( 21 )

[node name="Living Standard" type="Node" parent="Scripts/Effects"]
script = SubResource( 22 )

[node name="Rules" type="Node" parent="Scripts/Effects"]
script = SubResource( 23 )

[node name="Orgasm Rules" type="Node" parent="Scripts/Effects"]
script = SubResource( 24 )

[node name="Speech Rules" type="Node" parent="Scripts/Effects"]
script = SubResource( 25 )

[node name="Relationship Rules" type="Node" parent="Scripts/Effects"]
script = SubResource( 26 )

[node name="Smart Piercing" type="Node" parent="Scripts/Effects"]
script = SubResource( 27 )
