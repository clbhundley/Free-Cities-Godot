[gd_scene load_steps=36 format=2]

[ext_resource path="res://Slaves/Slave UI/Slave UI.tscn" type="PackedScene" id=1]
[ext_resource path="res://Slaves/slave.gd" type="Script" id=2]
[ext_resource path="res://Slaves/Model.tscn" type="PackedScene" id=3]
[ext_resource path="res://Slaves/stats.gd" type="Script" id=4]
[ext_resource path="res://Slaves/Slave Camera.gd" type="Script" id=5]
[ext_resource path="res://Slaves/Effects/Pregnancy.gd" type="Script" id=6]
[ext_resource path="res://Slaves/Effects/Diet.gd" type="Script" id=7]
[ext_resource path="res://Slaves/Effects/Hormones.gd" type="Script" id=8]
[ext_resource path="res://Slaves/Effects/Age.gd" type="Script" id=9]
[ext_resource path="res://Slaves/Effects/Health.gd" type="Script" id=10]
[ext_resource path="res://Slaves/Effects/Fatigue.gd" type="Script" id=11]
[ext_resource path="res://Slaves/Effects/Hunger.gd" type="Script" id=12]
[ext_resource path="res://Slaves/Effects/Bathroom.gd" type="Script" id=13]
[ext_resource path="res://Slaves/Effects/Arousal.gd" type="Script" id=14]
[ext_resource path="res://Slaves/Activity.gd" type="Script" id=15]
[ext_resource path="res://Slaves/Actions/SeekSex.gd" type="Script" id=16]
[ext_resource path="res://Slaves/Actions/Sex.gd" type="Script" id=17]
[ext_resource path="res://Slaves/Actions/Socializing.gd" type="Script" id=18]
[ext_resource path="res://Slaves/Effects/Curatives.gd" type="Script" id=19]
[ext_resource path="res://Slaves/Effects/Aphrodisiacs.gd" type="Script" id=20]
[ext_resource path="res://Slaves/Actions/travel.gd" type="Script" id=74]

[sub_resource type="GDScript" id=1]
script/source = "extends Node

onready var _slave = owner

func begin():
	_slave.get_node('UI/Top/Status').set_text(\"Resting\")

#func next_action():
#	var new_action
#	var new_queued_action
#
#	if _slave.queued_action:
#		_slave.action = _slave.queued_action
#		_slave.queued_action = null
#	if _slave.bathroom > 50:
#		if _slave.location == _slave.quarters:
#			new_action = \"Bathroom\"
#		else:
#			_slave.destination = _slave.quarters
#			new_action = \"Travel\"
#			new_queued_action = \"Bathroom\"
#	elif _slave.hunger > 40:
#		var nutrition_system = ArcUtils.get_nutrition_system()
#		if _slave.location == nutrition_system:
#			new_action = \"Eating\"
#		else:
#			_slave.destination = nutrition_system
#			new_action = \"Travel\"
#			new_queued_action = \"Eating\"
#	elif _slave.fatigue > 70:
#		if _slave.location == _slave.quarters:
#			new_action = \"Sleeping\"
#		else:
#			_slave.destination = _slave.quarters
#			new_action = \"Travel\"
#			new_queued_action = \"Sleeping\"
#	elif _slave.arousal > 16:
#		#chance for masturbation
#		#in a relationship?
#		#Emotionally bonded to player?
#		#Emotional slut?
#		#check devotion
#		# if devotion <
#		#chance for consensual interaction
#		#chance for nonconsensual interaction
#		new_action = \"SeekSex\"
#	else:
#		new_action = \"Idle\"
#
#	if new_action:
#		_slave.action = _slave.get_node('Actions/'+new_action)
#	if new_queued_action:
#		_slave.queued_action = _slave.get_node('Actions/'+new_queued_action)
"

[sub_resource type="GDScript" id=2]
script/source = "extends Node

onready var _slave = owner

func begin():
	_slave.get_node('UI/Top/Status').set_text(\"Prostitute\")

#func next_action():
#	var new_action
#	var new_queued_action
#
#	if _slave.queued_action:
#		_slave.action = _slave.queued_action
#		_slave.queued_action = null
#	elif _slave.bathroom > 60:
#		if _slave.location == _slave.quarters:
#			new_action = \"Bathroom\"
#		else:
#			_slave.destination = _slave.quarters
#			new_action = \"Travel\"
#			new_queued_action = \"Bathroom\"
#	elif _slave.hunger > 50:
#		var nutrition_system = ArcUtils.get_nutrition_system()
#		if _slave.location == nutrition_system:
#			new_action = \"Eating\"
#		else:
#			_slave.destination = nutrition_system
#			new_action = \"Travel\"
#			new_queued_action = \"Eating\"
#	elif _slave.fatigue > 70:
#		if _slave.location == _slave.quarters:
#			new_action = \"Sleeping\"
#		else:
#			_slave.destination = _slave.quarters
#			new_action = \"Travel\"
#			new_queued_action = \"Sleeping\"
#	elif _slave.arousal > 90:
#		new_action = \"Masturbation\"
#	else:
#		new_action = \"Soliciting\"
#		new_queued_action = \"ServicingCustomer\"
#
#	if new_action:
#		_slave.action = _slave.get_node('Actions/'+new_action)
#	if new_queued_action:
#		_slave.queued_action = _slave.get_node('Actions/'+new_queued_action)
"

[sub_resource type="GDScript" id=3]
script/source = "extends Node

onready var _slave = get_parent().get_parent()

var current_time = 0
var total_time

func display_action():
	owner.get_node('UI/Activity/Action').set_text(\"Idle\")

func tick():
	if current_time == 0:
		start()
	elif current_time < total_time:
		step()
	else:
		finish()

func start():
	total_time = abs(math.gaussian(100,10))
	display_action()
	step()

func step():
	current_time += 1 * time.scale

func finish():
	current_time = 0
	_slave.activity.action_end()
"

[sub_resource type="GDScript" id=4]
script/source = "extends Node

onready var _slave = get_parent().get_parent()

var current_time = 0
var total_time

func display_action():
	_slave.get_node('UI/Activity/Action').set_text(\"Sleeping\")

func tick():
	if current_time == 0:
		start()
	elif current_time < total_time:
		step()
	else:
		finish()

func start():
	_slave.is_awake = false
	var fatigue = round(_slave.fatigue/10)
	if fatigue == 0:
		fatigue = 1
	total_time = abs(math.gaussian(3600,200))*fatigue
	display_action()
	step()

func step():
	current_time += 1 * time.scale
	if _slave.fatigue > 0:
		var overstep = 1
		if total_time - current_time < 0:
			overstep = time.scale / abs(total_time-current_time)
		_slave.fatigue = max(_slave.fatigue - 0.0028 * time.scale / overstep, 0)

#		if s.health <= 0: #Deceased
#			pass
#		elif s.health < 10: #Near death
#			s.happiness += 0.001
#		elif s.health < 20: #Extremely unhealthy
#			s.happiness += 0.002
#		elif s.health < 30: #Very unhealthy
#			s.happiness += 0.003
#		elif s.health < 40: #Unhealthy
#			s.happiness += 0.004
#		elif s.health < 50: #Somewhat unhealthy
#			s.happiness += 0.005
#		elif s.health < 60: #Healthy
#			s.happiness += 0.001
#		elif s.health < 80: #Very healthy
#			s.happiness += 0.006
#		elif s.health < 100: #Extremely healthy
#			s.happiness += 0.007
#		elif s.health < 110: #Perfectly healthy
#			s.happiness += 0.008
#		elif s.health >= 110: #Unnaturally healthy
#			s.happiness += 0.009
#		if s.fatigue < 10: #Exhausted
#			s.fatigue += 0.005
#		if s.fatigue < 20: #Very tired
#			s.fatigue += 0.004
#		if s.fatigue < 30: #Tired
#			s.fatigue += 0.003
#		if s.fatigue < 40: #Drowsy
#			s.fatigue += 0.002
#		if s.fatigue < 50: #Awake
#			s.fatigue += 0.001
#		if s.fatigue < 60: #Fresh
#			s.fatigue += 0.0005
#		if s.fatigue < 80: #Energetic
#			s.fatigue += 0.0003
#		if s.fatigue < 100: #Very energetic
#			s.fatigue += 0.0001

func finish():
	current_time = 0
	_slave.is_awake = true
	_slave.activity.action_end()
"

[sub_resource type="GDScript" id=5]
script/source = "extends Node

onready var _slave = get_parent().get_parent()

var current_time = 0
var total_time

func display_action():
	_slave.get_node('UI/Activity/Action').set_text(\"Eating Meal\")

func tick():
	if current_time == 0:
		start()
	elif current_time < total_time:
		step()
	else:
		finish()

func start():
	game.update_money(-5) # cost of meal
	var hunger = max(round(_slave.hunger/10),1)
	total_time = abs(math.gaussian(55,11))*hunger
	display_action()
	step()

func step():
	current_time += 1 * time.scale
	if _slave.hunger > 0:
		var overstep = 1
		if total_time - current_time < 0:
			overstep = time.scale / abs(total_time-current_time)
		_slave.hunger = max(_slave.hunger - 0.2 * time.scale / overstep, 0)

func finish():
	current_time = 0
	_slave.activity.action_end()
"

[sub_resource type="GDScript" id=6]
script/source = "extends Node

onready var _slave = get_parent().get_parent()

var current_time = 0
var total_time

func display_action():
	_slave.get_node('UI/Activity/Action').set_text(\"Using bathroom\")

func tick():
	if current_time == 0:
		start()
	elif current_time < total_time:
		step()
	else:
		finish()

func start():
	var bathroom = round(_slave.bathroom/10)
	if bathroom == 0:
		bathroom = 1
	total_time = abs(math.gaussian(45,8))*bathroom
	display_action()
	step()

func step():
	current_time += 1 * time.scale
	if _slave.bathroom > 0:
		var overstep = 1
		if total_time - current_time < 0:
			overstep = time.scale / abs(total_time-current_time)
		_slave.bathroom = max(_slave.bathroom - 0.3 * time.scale / overstep, 0)

func finish():
	current_time = 0
	_slave.activity.action_end()
"

[sub_resource type="GDScript" id=7]
script/source = "extends Node

onready var _slave = get_parent().get_parent()

var current_time = 0
var total_time

func display_action():
	_slave.get_node('UI/Activity/Action').set_text(\"Soliciting\")

func tick():
	if current_time == 0:
		start()
	elif current_time < total_time:
		step()
	else:
		finish()

func start():
	var seduction_skill = _slave.skills.seduction * 3
	var prostitution_skill = _slave.skills.prostitution * 2
	var total_skill = seduction_skill + prostitution_skill
	total_time = max(math.gaussian(1500-total_skill,21),200)
	display_action()
	step()

func step():
	current_time += 1 * time.scale
	if _slave.arousal <= 90:
		var overstep = 1
		if total_time - current_time < 0:
			overstep = time.scale / abs(total_time-current_time)
		_slave.arousal = max(_slave.arousal + 0.06 * time.scale / overstep, 0)

func finish():
	current_time = 0
	_slave.destination = random_sector_test()
	_slave.action = _slave.get_node('Actions/Travel')

func random_sector_test():
	var terras = [\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\"]
	var arc_size = get_tree().get_root().get_node(\"Game/Arcology\").size
	var terra = terras[randi()%(arc_size-2)]
	var sector = randi()%12+1
	if terra == \"A\" or terra == \"B\":
		if randi()%2 == 1:
			sector += 12
	return terra+str(sector)
"

[sub_resource type="GDScript" id=8]
script/source = "extends Node

onready var _slave = owner

var current_time = 0
var total_time

var interacting_with = \"random citizen\"

func display_action():
	_slave.get_node('UI/Activity/Action').set_text(\"Servicing Customer\")

func tick():
	if current_time == 0:
		start()
	elif current_time < total_time:
		step()
	else:
		finish()

func start():
	var prostitution_skill = _slave.skills.prostitution * 4
	total_time = max(math.gaussian(4000-prostitution_skill,210),1000)
	display_action()
	step()

func step():
	current_time += 1 * time.scale
	if _slave.arousal > 0:
		var overstep = 1
		if total_time - current_time < 0:
			overstep = time.scale / abs(total_time-current_time)
		_slave.arousal = max(_slave.arousal - 0.1 * time.scale / overstep, 0)

func finish():
	current_time = 0
	var price = max(math.gaussian(value_of_services(),5),1)
	game.update_money(price)
	if randi()%3 == 0:
		_slave.inseminate()
	chance_for_injury()
	_slave.activity.action_end()

func value_of_services():
	var total:int
	var total_skill:float
	var skills = [
		_slave.skills.entertainment * 0.5,
		_slave.skills.prostitution * 0.7,
		_slave.skills.seduction * 0.6,
		_slave.skills.sexual_total]
	for skill in skills:
		total_skill += skill
	total_skill /= 6
	var attractiveness:int = _slave.face - 6
	if sign(attractiveness) == 1:
		total = total_skill * attractiveness
	elif sign(attractiveness) == -1:
		total = total_skill / abs(attractiveness)
	else:
		total = total_skill
	return total

func chance_for_injury():
	if randi()%12 == 0 and randi()%8 == 0:
		var prostitution_skill = _slave.skills.prostitution * 4
		if randi()%1000 <= prostitution_skill:
			return
		var damage = clamp(abs(math.gaussian(1,2)),1,5)
		var starting_health = _slave.health
		_slave.health -= damage
		var damage_actual = starting_health - _slave.health
		NAVI.say(
			_slave.name+
			\" took \"+str(damage_actual)+\" damage\"+
			\" while servicing a customer\")
"

[sub_resource type="GDScript" id=9]
script/source = "extends Node

onready var _slave = get_parent().get_parent()

var current_time = 0
var total_time

func display_action():
	_slave.get_node('UI/Activity/Action').set_text(\"Masturbating\")

func tick():
	if current_time == 0:
		start()
	elif current_time < total_time:
		step()
	else:
		finish()

func start():
	var arousal = round(_slave.arousal/10)
	if arousal == 0:
		arousal = 1
	total_time = abs(math.gaussian(230,21))*arousal
	display_action()
	step()

func step():
	current_time += 1 * time.scale
	if _slave.arousal > 0:
		var overstep = 1
		if total_time - current_time < 0:
			overstep = time.scale / abs(total_time-current_time)
		_slave.arousal = max(_slave.arousal - 0.1 * time.scale / overstep, 0)

func finish():
	current_time = 0
	_slave.activity.action_end()
"

[sub_resource type="GDScript" id=10]
script/source = "extends Node

func activate_primary_effects():
	for effect in [$Health,$Fatigue,$Hunger,$Bathroom,$Arousal]:
		effect.activate()

func deactivate_all():
	for node in get_children():
		if node.has_method(\"deactivate\"):
			node.deactivate()
"

[sub_resource type="Curve" id=11]
_data = [ Vector2( 0, 1 ), 0.0, -0.401515, 0, 0, Vector2( 0.25, 0.6 ), -2.96503, -2.96503, 0, 0, Vector2( 1, 0.01 ), -0.310646, 0.0, 0, 0 ]

[sub_resource type="Curve" id=12]
_data = [ Vector2( 0, 0 ), 0.0, 0.0, 0, 0, Vector2( 1, 1 ), 0.0, 0.0, 0, 0 ]

[sub_resource type="GDScript" id=13]
script/source = "extends Node

func deactivate():
	for node in get_children():
		if node.has_method(\"deactivate\"):
			node.deactivate()
"

[sub_resource type="GDScript" id=14]
script/source = "extends Node

func deactivate():
	for node in get_children():
		if node.has_method(\"deactivate\"):
			node.deactivate()
"

[node name="Slave" type="Spatial" groups=[
"Slaves",
]]
script = ExtResource( 2 )

[node name="Model" parent="." instance=ExtResource( 3 )]

[node name="OmniLight" type="OmniLight" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 3.1993, 4.65383 )
visible = false
omni_range = 20.0

[node name="Camera" type="Camera" parent="."]
transform = Transform( 1, 0, 0, 0, 0.995019, 0.0996845, 0, -0.0996845, 0.995019, 0, 2.23478, 3.75163 )
script = ExtResource( 5 )

[node name="Tween" type="Tween" parent="Camera"]

[node name="UI" parent="." instance=ExtResource( 1 )]

[node name="Stats" type="Node" parent="."]
script = ExtResource( 4 )

[node name="Activity" type="Node" parent="."]
script = ExtResource( 15 )

[node name="Assignments" type="Node" parent="."]

[node name="Resting" type="Node" parent="Assignments"]
script = SubResource( 1 )

[node name="Prostitute" type="Node" parent="Assignments"]
script = SubResource( 2 )

[node name="Confinement" type="Node" parent="Assignments"]

[node name="Classes" type="Node" parent="Assignments"]

[node name="House Servant" type="Node" parent="Assignments"]

[node name="Pet" type="Node" parent="Assignments"]

[node name="Escort" type="Node" parent="Assignments"]

[node name="Public Servant" type="Node" parent="Assignments"]

[node name="Subordinate Assistant" type="Node" parent="Assignments"]

[node name="Subordinate Slave" type="Node" parent="Assignments"]

[node name="Glory Hole" type="Node" parent="Assignments"]

[node name="Sex Arcade" type="Node" parent="Assignments"]

[node name="Club Entertainer" type="Node" parent="Assignments"]

[node name="Office Toy" type="Node" parent="Assignments"]

[node name="Office Ornament" type="Node" parent="Assignments"]

[node name="Arcology Toy" type="Node" parent="Assignments"]

[node name="Arcology Ornament" type="Node" parent="Assignments"]

[node name="Fluid Extraction" type="Node" parent="Assignments"]

[node name="Actions" type="Node" parent="."]

[node name="Idle" type="Node" parent="Actions"]
script = SubResource( 3 )

[node name="Travel" type="Node" parent="Actions"]
script = ExtResource( 74 )

[node name="Sleeping" type="Node" parent="Actions"]
script = SubResource( 4 )

[node name="Eating" type="Node" parent="Actions"]
script = SubResource( 5 )

[node name="Bathroom" type="Node" parent="Actions"]
script = SubResource( 6 )

[node name="Socializing" type="Node" parent="Actions"]
script = ExtResource( 18 )

[node name="Soliciting" type="Node" parent="Actions"]
script = SubResource( 7 )

[node name="ServicingCustomer" type="Node" parent="Actions"]
script = SubResource( 8 )

[node name="Masturbation" type="Node" parent="Actions"]
script = SubResource( 9 )

[node name="SeekSex" type="Node" parent="Actions"]
script = ExtResource( 16 )

[node name="Sex" type="Node" parent="Actions"]
script = ExtResource( 17 )

[node name="Effects" type="Node" parent="."]
script = SubResource( 10 )

[node name="Age" type="Node" parent="Effects"]
script = ExtResource( 9 )
fertility_decline = SubResource( 11 )

[node name="Health" type="Node" parent="Effects"]
script = ExtResource( 10 )

[node name="Fatigue" type="Node" parent="Effects"]
script = ExtResource( 11 )

[node name="Hunger" type="Node" parent="Effects"]
script = ExtResource( 12 )

[node name="Bathroom" type="Node" parent="Effects"]
script = ExtResource( 13 )

[node name="Arousal" type="Node" parent="Effects"]
script = ExtResource( 14 )

[node name="Pregnancy" type="Node" parent="Effects"]
script = ExtResource( 6 )
belly_size = SubResource( 12 )

[node name="Regimen" type="Node" parent="Effects"]
script = SubResource( 13 )

[node name="Pharmaceuticals" type="Node" parent="Effects/Regimen"]
script = SubResource( 14 )

[node name="Psychosuppressants" type="Node" parent="Effects/Regimen/Pharmaceuticals"]

[node name="BreastGrowth" type="Node" parent="Effects/Regimen/Pharmaceuticals"]

[node name="ButtocksGrowth" type="Node" parent="Effects/Regimen/Pharmaceuticals"]

[node name="PenisClitGrowth" type="Node" parent="Effects/Regimen/Pharmaceuticals"]

[node name="LipGrowth" type="Node" parent="Effects/Regimen/Pharmaceuticals"]

[node name="Steroids" type="Node" parent="Effects/Regimen/Pharmaceuticals"]

[node name="FertilityEnhancers" type="Node" parent="Effects/Regimen/Pharmaceuticals"]

[node name="Preventatives" type="Node" parent="Effects/Regimen"]

[node name="Curatives" type="Node" parent="Effects/Regimen"]
script = ExtResource( 19 )

[node name="Contraception" type="Node" parent="Effects/Regimen"]

[node name="Diet" type="Node" parent="Effects/Regimen"]
script = ExtResource( 7 )

[node name="Hormones" type="Node" parent="Effects/Regimen"]
script = ExtResource( 8 )

[node name="Aphrodisiacs" type="Node" parent="Effects/Regimen"]
script = ExtResource( 20 )

[node name="Living Standard" type="Node" parent="Effects"]

[node name="Rules" type="Node" parent="Effects"]

[node name="Orgasm Rules" type="Node" parent="Effects"]

[node name="Speech Rules" type="Node" parent="Effects"]

[node name="Relationship Rules" type="Node" parent="Effects"]

[node name="Smart Piercing" type="Node" parent="Effects"]
