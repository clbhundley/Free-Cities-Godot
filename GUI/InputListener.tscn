[gd_scene load_steps=2 format=2]

[sub_resource type="GDScript" id=1]
script/source = "extends Node

var motion_detected
func _input(event):
	if event.is_action_released(\"ui_accept\"):
		if not game.get_gui().mouse_over_gui:
			if not motion_detected:
				var ev = InputEventAction.new()
				ev.action = \"stationary_select\"
				ev.pressed = true
				Input.parse_input_event(ev)
	if event.is_class(\"InputEventMouseMotion\"):
		motion_detected = true
	else:
		motion_detected = false


#SWIPE DETECTION (DOWN)
#######################

#signal swiped(direction)
#signal swipe_canceled(start_position)
#
#const MAX_DIAGONAL_SLOPE = 1.3
#
#var swipe_start_position = Vector2()
#
#func _input(event):
#	if not event is InputEventScreenTouch:
#		return
#	if event.pressed:
#		_start_detection(event.position)
#	elif not $Timer.is_stopped():
#		_end_detection(event.position)
#
#func _start_detection(position):
#	swipe_start_position = position
#	$Timer.start()
#
#func _end_detection(position):
#	$Timer.stop()
#	var direction = -1 * (position - swipe_start_position).normalized()
#	if abs(direction.x) + abs(direction.y) >= MAX_DIAGONAL_SLOPE:
#		return
#	if abs(direction.x) > abs(direction.y):
#		emit_signal(\"swiped\", Vector2(sign(direction.x), 0))
#	else:
#		emit_signal(\"swiped\", Vector2(0, sign(direction.y)))
#		if sign(direction.y) == -1:
#			down_swipe()
#
#func _on_Timer_timeout():
#	emit_signal(\"swipe_canceled\", swipe_start_position)
#
#func down_swipe():
#	var ev = InputEventAction.new()
#	ev.action = \"ui_back\"
#	ev.pressed = true
#	Input.parse_input_event(ev)
"

[node name="InputListener" type="Node"]
script = SubResource( 1 )

[node name="Timer" type="Timer" parent="."]
wait_time = 0.35
one_shot = true
[connection signal="timeout" from="Timer" to="." method="_on_Timer_timeout"]
